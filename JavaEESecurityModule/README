A Jakarta-compliant Security module for backend applications.

Can easily be used for any application where the users' rights and roles are saved in a database.
All one needs it to add the @UserRepo annotation in the relevant class.

Once a user enters proper credentials and logs in, an auto-generated token is returned.
That token is saved in a database along with information such as its' expiration date, as well as whether it currently is being used in a session.

The token is essentially an encrypted string containing information about the user and his roles.

Once a request with a token is received, the existence and validity of the token is verified in the db.
The ACTIVE_NOW flag is set to true -indicating that the user is currently interacting with the application.
If the same token is received in another request while ACTIVE_NOW, the token is regarded as stolen
and becomes invalidated.

The ACTIVE_NOW is set to false once the session is terminated. The frontend of the application may inform the
backend that a user has e.g. closed the tab or the window, thereby triggering a function that sets ACTIVE_NOW to false.




To test the functionality, we have created some restful endpoints that can by used by some roles.
The available roles are: MATHS_PROFESSOR, PHYSICS_PROFESSOR, SUPERVISING_PROFESSOR, PRINCIPAL, CLERK_1, CLERK_2, ADMIN, and FRONTEND_APPLICATION.
A user may have one or more roles (e.g. a maths professor may be a physics professor at the same time, and a clerk may have both clerk_1 and clerk_2).
To keep it simple, we do not limit combinations of the above roles.







