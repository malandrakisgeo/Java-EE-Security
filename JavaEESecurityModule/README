The user authenticates either with a username and a password (Basic Authentication), or using a token. 

Basic authentication:
  1. The validity of the credentials is checked.
  2. If the creds are valid, and the user is not currently active somewhere else, the user calls the endpoints without a problem. A token is generated if 
  the user has chosen to ("remember me").

Token Authentication: 
  1. Similar. 
  
Each request is an HttpServletRequest assosiated with an HttpSession generated by the server when first contacted by a client. 
If the credentials are valid, a Login object associated with the HttpSession is generated. The object contains not only the session, but
details such as the ipAddress, the User-agent, the token (if any), etc. 
The login-object is an HttpSessionBindingListener, which means that it "dies" as soon as the 
HttpSession expires, removing itself from the hashmap.

The application keeps a hashmap with usernames and login-objects (i.e. usernames associated with active sessions and ip addresses).
When a login object is created (i.e. when there is a new HttpSession), is stored along with the assosiated user in that hashmap. 
When a user tries to authenticate, the authentication mechanism checks whether there is an active session for the user, i.e. whether there is 
a key for the username in the hashmap. If any, both sessions are invalidated, along with any tokens to the user
(and ideally the application notifies the user that their credentials might have been compromised).

